//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Служебная функция.
Функция ДобавитьШагВМассивТестов(МассивТестов,Снипет,ИмяПроцедуры,ПредставлениеТеста = Неопределено,Транзакция = Неопределено,Параметр = Неопределено)
	Структура = Новый Структура;
	Структура.Вставить("Снипет",Снипет);
	Структура.Вставить("ИмяПроцедуры",ИмяПроцедуры);
	Структура.Вставить("ИмяПроцедуры",ИмяПроцедуры);
	Структура.Вставить("ПредставлениеТеста",ПредставлениеТеста);
	Структура.Вставить("Транзакция",Транзакция);
	Структура.Вставить("Параметр",Параметр);
	МассивТестов.Добавить(Структура);
КонецФункции

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	ДобавитьШагВМассивТестов(ВсеТесты,"ОтносительноеИмяФайлаОбработкиДляЧтенияФичСледующее(Парам01)","ОтносительноеИмяФайлаОбработкиДляЧтенияФичСледующее","Дано Относительное имя файла обработки для чтения фич следующее ""sbFeatureReader.epf""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ОтносительноеИмяФайлаОбработкиДляЗаписиФичСледующее(Парам01)","ОтносительноеИмяФайлаОбработкиДляЗаписиФичСледующее","Дано Относительное имя файла обработки для записи фич следующее ""sbFeatureWriter.epf""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ОтносительноеИмяФайлаОбработкиДляЧтенияФикстурСледующее(Парам01)","ОтносительноеИмяФайлаОбработкиДляЧтенияФикстурСледующее","Дано Относительное имя файла обработки для чтения фикстур следующее ""sbFixturesReader.epf""");
	ДобавитьШагВМассивТестов(ВсеТесты,"ОтносительноеИмяФайлаОбработкиДляЗаписиФикстурСледующее(Парам01)","ОтносительноеИмяФайлаОбработкиДляЗаписиФикстурСледующее","Дано Относительное имя файла обработки для записи фикстур следующее ""sbFixturesWriter.epf""");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	Контекст.Вставить("ИмяКаталогаИнструментов", "vanessa-stack-commons");
	Контекст.Вставить("КаталогИнструментов", ПолучитьКаталогИнструментовНаСервере(Контекст));
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Дано Относительное имя файла обработки для чтения фич следующее "sbFeatureReader.epf"
//@ОтносительноеИмяФайлаОбработкиДляЧтенияФичСледующее(Парам01)
Процедура ОтносительноеИмяФайлаОбработкиДляЧтенияФичСледующее(Парам01) Экспорт
	ИмяКлючаДляПроверки = "ФайлаОбработкиДляЧтенияФичКорректно";
	
	Контекст.Вставить(ИмяКлючаДляПроверки, Ложь);
	
	Файл = Новый Файл(Контекст.КаталогИнструментов + Парам01);
	
	Файл.НачатьПроверкуСуществования(Новый ОписаниеОповещения("ОтносительноеИмяФайлаОбработкиДляЧтенияФичСледующееЗавершение", ЭтотОбъект, ИмяКлючаДляПроверки));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтносительноеИмяФайлаОбработкиДляЧтенияФичСледующееЗавершение(ФайлСуществует, ИмяКлючаДляПроверки) Экспорт
	Контекст[ИмяКлючаДляПроверки] = ФайлСуществует;
	
	Ванесса.ПроверитьИстину(Контекст[ИмяКлючаДляПроверки], "");
КонецПроцедуры

&НаКлиенте
//Дано Относительное имя файла обработки для записи фич следующее "sbFeatureWriter.epf"
//@ОтносительноеИмяФайлаОбработкиДляЗаписиФичСледующее(Парам01)
Процедура ОтносительноеИмяФайлаОбработкиДляЗаписиФичСледующее(Парам01) Экспорт
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Дано Относительное имя файла обработки для чтения фикстур следующее "sbFixturesReader.epf"
//@ОтносительноеИмяФайлаОбработкиДляЧтенияФикстурСледующее(Парам01)
Процедура ОтносительноеИмяФайлаОбработкиДляЧтенияФикстурСледующее(Парам01) Экспорт
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Дано Относительное имя файла обработки для записи фикстур следующее "sbFixturesWriter.epf"
//@ОтносительноеИмяФайлаОбработкиДляЗаписиФикстурСледующее(Парам01)
Процедура ОтносительноеИмяФайлаОбработкиДляЗаписиФикстурСледующее(Парам01) Экспорт
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаСервере
Функция ПолучитьКаталогИнструментовНаСервере(Контекст)
	ПолноеИмяОбработки = РеквизитФормыВЗначение("Объект").ИспользуемоеИмяФайла;

	Возврат Лев(ПолноеИмяОбработки, СтрНайти(ПолноеИмяОбработки, Контекст.ИмяКаталогаИнструментов) - 1) + Контекст.ИмяКаталогаИнструментов + "\";
КонецФункции

&НаКлиенте
Процедура ПроверитьСуществованиеОбработки(ПолноеИмяФайла, ИмяКлючаДляПроверки)
	Файл = Новый Файл(ПолноеИмяФайла);
	
	Файл.НачатьПроверкуСуществования(Новый ОписаниеОповещения("ПроверитьСуществованиеОбработкиЗавершение", ЭтотОбъект, ИмяКлючаДляПроверки));
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСуществованиеОбработкиЗавершение(ФайлСуществует, ИмяКлючаДляПроверки) Экспорт
	Контекст[ИмяКлючаДляПроверки] = ФайлСуществует;
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	Контекст = Новый Структура;
	
	ПередНачаломСценария();
	
	ОтносительноеИмяФайлаОбработкиДляЧтенияФичСледующее("sbFeatureReader.epf");
КонецПроцедуры
