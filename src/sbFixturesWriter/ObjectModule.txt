
Процедура Тест() Экспорт
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "тест-тест-тест-тест-тест-тест-тест-тест-тест-тест-тест-тест-тест-тест-тест-тест-тест-тест-тест-тест-тест-тест-тест-тест-тест-";
	Сообщение.Сообщить();
КонецПроцедуры

//-

Функция ПолучитьФикстуру(ВыбранныеДанные) Экспорт
	Для Каждого Строка Из ВыбранныеДанные Цикл
		СтруктураМетаданных = ПолучитьСтруктуруМетаданныхДокумента(Строка);
		
		
		
	КонецЦикла;
	
	
КонецФункции

Функция ПолучитьСтруктуруМетаданныхДокумента(Строка)
	МетаданныеОбъекта = Строка.Метаданные();
	
	врДеревоЗначений = Новый ДеревоЗначений;
	врДеревоЗначений.Колонки.Добавить("Данные", Новый ОписаниеТипов("Строка"));
	
	врМассив = Новый Массив;
	врМассив.Добавить("Реквизиты");
	врМассив.Добавить("ТабличныеЧасти");
	врМассив.Добавить("Формы");
	врМассив.Добавить("Макеты");
	
	Для Каждого Строка Из врМассив Цикл
		НоваяСтрока = врДеревоЗначений.Строки.Добавить();
		НоваяСтрока.Данные = Строка;
		
		Если Строка = "ТабличныеЧасти" Тогда
			ТЧ = МетаданныеОбъекта[Строка];
			Для Каждого СтрокаТЧ Из ТЧ Цикл
				НоваяВложеннаяСтрока = НоваяСтрока.Строки.Добавить();
				НоваяВложеннаяСтрока.Данные = СтрокаТЧ.Имя;
				
				Рекурсия(НоваяВложеннаяСтрока, СтрокаТЧ.Реквизиты);
			КонецЦикла;
		Иначе
			Рекурсия(НоваяСтрока, МетаданныеОбъекта[Строка]);
		КонецЕсли;
	КонецЦикла;
	
	Возврат врДеревоЗначений;
КонецФункции

Процедура Рекурсия(ДЗ, Коллекция)
	Для каждого Строка Из Коллекция Цикл
		НоваяСтрока = ДЗ.Строки.Добавить();
		НоваяСтрока.Данные = Строка.Имя;
		
		Если ТипЗнч(Строка) = Тип("ОбъектМетаданных") Тогда
			ВложеннаяКоллекция = НайтиРеквизитыОбъекта(Строка);
			Если ВложеннаяКоллекция <> Неопределено Тогда
				Рекурсия(НоваяСтрока, ВложеннаяКоллекция);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция НайтиРеквизитыОбъекта(ТекОбъект)
	Попытка
		ВозможныеТипы = ТекОбъект.Тип.Типы();
		Для Каждого Тип Из ВозможныеТипы Цикл
			Если Справочники.ТипВсеСсылки().СодержитТип(Тип) Тогда
				Возврат Метаданные.Справочники[Строка(Тип)].Реквизиты;
			КонецЕсли;
		КонецЦикла;
	Исключение
		//	
	КонецПопытки;
	
	Возврат Неопределено;
КонецФункции
